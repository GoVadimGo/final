# В задаче 52 мы уже создавали таблицу соответствий между оценками в буквенном и числовом выражении.
# Сейчас вам нужно будет рассчитать среднюю оценку по произвольному количеству введенных пользователем
# буквенных оценок. Для окончания ввода можно использовать индикатор в виде пустой строки. Например,
# если пользователь последовательно введет оценки A, затем C+, а после этого B и пустую строку, средний
# результат должен составить 3,1. Для расчетов вам может пригодиться математика из упражнения 52. Никаких проверок на
# ошибки проводить не нужно. Предположим, что пользователь может вводить только корректные оценки или ноль.

NUMBERS = ['0','1.0','1.3','1.7','2.0','2.3','2.7','3.0','3.3','3.7','4.0','5'] # список с оценками
LETTERS = ['F','D','D+','C-','C','C+','B-','B','B+','A-','A','A+']  # список с буквенными оценками

flag = 0  # создаем накопитель оценок
iter_count = 0  # создаем счетчик итераций
MARK = input('Введите буквенную оценку (введите пробел для выхода) : ') # создаем инструкцию по вводу оценок


while MARK != '': # создаем цикл с условием - пробел выход
    iter_count += 1 # каждую итерация будет зачисляться в счетчик добавляя 1.
    index_L = LETTERS.index(MARK) # создаем переменную ,аргуменотом которой будет индекс обьекта из списка LETTERS ,
    # Обьект из списка соответствует полученному через инструкцию ввода обьекту типа стринг .
    NUM = float(NUMBERS[index_L]) # так как градация оценок обоих листов одинаковая, то и индексы оценок
    # из одного листа будут совпадать с индекстами оценок из другого листа.  Вытаскиваем и ставим как вргумент
    # оценку из первого листа по индексу ,полученному ранее.
    flag += NUM # накапливаем оценки ,путем сложения во время каждой итерации.
    MARK = input('Введите буквенную оценку (введите пробел для выхода) : ') # продолжаем цикл или останавливаем.
flag = flag/iter_count # путем частного сумму всех оценок и количества всех итераций находим средний балл.
print(f'Средняя оценка {flag:.2f}')
print(f'{iter_count}')


